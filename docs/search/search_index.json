{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Agile Slices website \u00b6 This book will cover agile concepts, best practices, tools, techniques and transitioning to agile software development. The topics will be presented in thin slices, each focusing on a single aspect. In each instance questions and/or checklist will be provided to check understanding. Info My intention is to keep this site free to use. I am working on companion content including an app that is currently in development and will be linked from this site when available. Version 0.1 This book is currently in \u201cdevelopment\u201d. To identify sections that are in draft status, the \u201cconstruction\u201d indicator will be used.","title":"Welcome"},{"location":"#welcome-to-agile-slices-website","text":"This book will cover agile concepts, best practices, tools, techniques and transitioning to agile software development. The topics will be presented in thin slices, each focusing on a single aspect. In each instance questions and/or checklist will be provided to check understanding. Info My intention is to keep this site free to use. I am working on companion content including an app that is currently in development and will be linked from this site when available. Version 0.1 This book is currently in \u201cdevelopment\u201d. To identify sections that are in draft status, the \u201cconstruction\u201d indicator will be used.","title":"Welcome to Agile Slices website"},{"location":"definition/","text":"Recommended reading: History: The Agile Manifesto Over the years Agile has been defined in many ways, here are a few definitions i have come across for Agile The ability to create and respond to change in order to deliver business value in an uncertain and turbulent environment (Source: Agile Alliance ) Agile software development is an approach to software development under which requirements and solutions evolve through the collaborative effort of self-organizing and cross-functional teams and their customer(s)/end user(s). It advocates adaptive planning, evolutionary development, early delivery, and continual improvement, and it encourages rapid and flexible response to change (Source: Wikipedia ) Agile is a time boxed, iterative approach to creating business value that incrementally delivers from the start of the initiative or project, instead of trying to deliver it all at once near the end (Source: Agile in a Nutshell ) My preferred definition is Definition Agile methodology results in greatest value delivered frequently and easily. \u00b6 Agile methodology \u00b6 Agile approach is to empower teams and individuals to apply the most efficient techniques in generating value for the customer. This includes creating a healthy work environment and developing support systems to enable the team to focus on value delivery. Greatest value \u00b6 Agile teams must know the value, size and sequence of work items. The backlog of work items must be regularly updated by seeking feedback, incorporating change in requirements and learnings from previous development cycles. Teams must groom the backlog to include just enough work to meet the customer needs. This enables the teams to work on the highest value items to satisfy the customer. Frequently and easily \u00b6 Agile teams have short development cycles which means frequent delivery of working software and many opportunities to collect feedback. The backlog supports the short cycle by having work broken down into small enough pieces that can be completed in a cycle and provide value to the customer. The team continuously improves the development pipeline, supporting processes and tools to make it easy to deliver at a sustainable pace. Review To Do","title":"2. Definition"},{"location":"definition/#agile-methodology-results-in-greatest-value-delivered-frequently-and-easily","text":"","title":"Agile methodology results in greatest value delivered frequently and easily."},{"location":"definition/#agile-methodology","text":"Agile approach is to empower teams and individuals to apply the most efficient techniques in generating value for the customer. This includes creating a healthy work environment and developing support systems to enable the team to focus on value delivery.","title":"Agile methodology"},{"location":"definition/#greatest-value","text":"Agile teams must know the value, size and sequence of work items. The backlog of work items must be regularly updated by seeking feedback, incorporating change in requirements and learnings from previous development cycles. Teams must groom the backlog to include just enough work to meet the customer needs. This enables the teams to work on the highest value items to satisfy the customer.","title":"Greatest value"},{"location":"definition/#frequently-and-easily","text":"Agile teams have short development cycles which means frequent delivery of working software and many opportunities to collect feedback. The backlog supports the short cycle by having work broken down into small enough pieces that can be completed in a cycle and provide value to the customer. The team continuously improves the development pipeline, supporting processes and tools to make it easy to deliver at a sustainable pace. Review To Do","title":"Frequently and easily"},{"location":"introduction/","text":"Agile has gained a lot of popularity in the last few years and is in use by a large number of software companies to develop products. Agile methodology is applicable in a wide variety of software projects however there are some scenarios where an alternative approach may be better suited. This book will cover how to determine if agile is right for your software development effort and dive deeper into foundational agile concepts. 1.1. What you will learn \u00b6 Agile is a huge field, and there is no way to master it by reading a single book. The goal of this book is to give you a solid foundation in the most important concepts. In this book we will focus on grasping the fundamentals essential to mastering agile. 1.2. What you won\u2019t learn \u00b6 We will reference Agile frameworks such as Scrum and Kanban, however this book will not cover those in detail. Links will be provided for further exploration. 1.3. What value will you get from reading this book \u00b6 To get greatest value from this book, complete the review sections in each chapter. Completing a review section will result in a score that corresponds to a color band. These bands are loosely based on a japanese martial art concept: shu, ha, ri 1 Expert Mastery of agile concepts. Ability to apply out-of-the-box thinking while remaining true to Agile values. Advanced Excellent grasp of concepts. Able to deliver value at sustainable development pace. Basic Have broad knowlegde of agile principles and how to apply them. Needs some guidance. Aware Understand basic concepts. Low experience. Needs a lot of guidance to be effective. Learn more about Shu Ha Ri \u21a9","title":"1. Introduction"},{"location":"introduction/#11-what-you-will-learn","text":"Agile is a huge field, and there is no way to master it by reading a single book. The goal of this book is to give you a solid foundation in the most important concepts. In this book we will focus on grasping the fundamentals essential to mastering agile.","title":"1.1. What you will learn"},{"location":"introduction/#12-what-you-wont-learn","text":"We will reference Agile frameworks such as Scrum and Kanban, however this book will not cover those in detail. Links will be provided for further exploration.","title":"1.2. What you won't learn"},{"location":"introduction/#13-what-value-will-you-get-from-reading-this-book","text":"To get greatest value from this book, complete the review sections in each chapter. Completing a review section will result in a score that corresponds to a color band. These bands are loosely based on a japanese martial art concept: shu, ha, ri 1 Expert Mastery of agile concepts. Ability to apply out-of-the-box thinking while remaining true to Agile values. Advanced Excellent grasp of concepts. Able to deliver value at sustainable development pace. Basic Have broad knowlegde of agile principles and how to apply them. Needs some guidance. Aware Understand basic concepts. Low experience. Needs a lot of guidance to be effective. Learn more about Shu Ha Ri \u21a9","title":"1.3. What value will you get from reading this book"},{"location":"manifesto/","text":"Agile Manifesto \u00b6 Pre-requisites: Agile Definition , Agile Principles In this section we will dive deeper into each of statement from the The Agile Manifesto . We value Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan One of the anti-patterns in Agile adoption is to focus on the left hand side of the 4 statements, which leads to imbalanced implementation and reduced benefits. The items on the right are part of Agile and must be factored in the adoption phase to realize maximum benefits. Example Scenario: Transition to Agile To understand these statements better, let\u2019s construct a hypothetical scenario : Executives at ACME Inc. have asked one of their software development teams to pilot Agile. The team currently consists of a PM, four developers, a tester and an analyst. This team is new to Agile methodology. The examples depict events in sequence and should be read in order. Note: This example is intended to show how the 4 statements in the Agile manifesto relate to an Agile team\u2019s activities. It is - not - a roadmap for Agile transition and is simplified for brevity Individuals and interactions over processes and tools \u00b6 Agile approach values individuals and implies providing the necessary support needed for the individuals to perform their best. Efficient and frequent interaction is valued. The supporting processes and tools should enhance transparency and trust. Example: ACME team Day 1 : The team meets to discuss agile transition. They agree on the following Every team member will attend Agile methodology training Any decision that impacts the team will be taken together by the team Experimentation is encouraged, take a fail-fast approach. We value individuals : Awareness of team member needs, Building trust, Creating a safe environment for learning. Next sync meeting : All team members have completed training. The team meets to discuss next steps. To be a cross functional team, the team will work together and learn from each other. The team will adopt 4 week long cycle/iteration The team will use a wall and sticky notes for tracking work The team will meet daily at a set time and talk about what they are working on and if they need help The team will pick a small project and familiar technology stack We value interactions : Frequent interaction, helping each other. We value individuals : Not overload the team at an early stage so the team has time to learn, acclimate and adapt. Start with just enough process and tools that add value. Next sync meeting : The team is cross-functional, each team member has their area of expertise and are comfortable with performing activities in other areas. The team meets to discuss next steps. The team will hold planning meeting at the start of a cycle and review meeting at the end of the cycle. The team will work together on building a backlog with just enough details for two cycles The team will estimate work items in the backlog using familiar technique We value interactions : More face-to-face communication. Introduce changes in increments rather than all at once, Just enough preparation so the team is not blocked Review To Do Working software over comprehensive documentation \u00b6 Delivering value frequently by doing just enough work and adapting to change is the Agile way. This implies doing work in increments and just enough documentation that is needed for that increment. Example ACME team Next review meeting : The team reviews completed work which at this time is the backlog. When a team has to start with building a backlog and everyone is pitching in there may not be code written in that initial cycle. This was not a coding cycle for this team. A backlog with next 2 cycles of work - is a deliverable of the iteration for this team. Some teams may start building a dev environment or procurring assets, if the agile team is doing this work then it is valid to include this in the review. Q) This seems like traditional approach where requirements document is created first, isn\u2019t it? A) Remember that the backlog is an artifact that has several levels and only the most important (highest value) requirements are broken down from the highest level to the lowest level (A unit of work that can be done in a cycle). The backlog will have just enough work items that the team can address in the next cycle or two (some teams encourage having 3 cycles worth of work items). This is different from traditional approach where all requirements need to elaborated before any work begins. Working software can be built only if the requirements are known and understood. Involving the entire team in the backlog building excercise was a great idea for this team, because the team could understand how its done and also provide feedback on what kind of details are needed at the work item level for the team to have clarity. Next planning meeting : The team selects work items for the cycle. The team members provide their inputs on how much work the team can accomplish so just enough work is added to the cycle. The work is not assigned but is chosen by the team members. After the planning meeting the team members create tasks for the work items and estimate the tasks in hours. After this the team commits to work that can be finished. At this time there are some items that get moved to the next cycle. To have predictable delivery the work must be estimated by those who will actually do it. Working software will be delivered if the team members understand exactly what is involved in delivering it and what \u201cdone\u201d means. Next review meeting : The team is able to deliver on most of the commitments but a couple of work items were not completed. There is no UI at this time and the code demo involves a quick view of the code and running unit tests. Stakeholder feedback is recorded. After the review, the PM sends out a report to executives on what was done. Working software is the true measure of progress. Reporting on commitments and accomplishments when done in an easy way (for example : a brief summay and link to tool that shows the completed items) promotes transparency and builds trust. It is also a great way to recognize the team for the work done. Whereas in traditional approach there is significant time invested in comprehensive documentation such as requirements document, this means that if there were changes then all that effort was spent needlessly. In Agile methodology the requirements are evaluated for value and the highest value items are broken down in increments, if changes to requirements that have not been broken down are required then there is zero wasted effort. In addition since the changes can be incorporated so easily the value delivered to the customer will be higher and customer satisfaction improves. Review To Do Customer collaboration over contract negotiation \u00b6 Customer satisfaction is the highest goal in Agile. It goes beyond contractual obligations and towards customer delight. Being customer obsessed means starting with the customer, collaborating with the customer throughout the project to understand their goals and adapt to deliver the best value. Example: ACME team Retrospective : The team has identified an improvement area. Team members realize they need to improve customer collaboration, the team is developing an internal tool and has been reaching out to the teams that will use this tool (internal customers). A team member volunteers to be the product owner and work with the other teams closely to understand their needs. The team also decides to extend invitation to key members from other teams for their planning and review meetings. Customer collaboration is possible in many ways, some teams invite external customers to their agile meetings. Other teams have a product owner who works with external customers and acts as the customer representative in the team. Next planning meeting : The meeting includes internal customers and the team shares the cycle goals with them. The team gets feedback that a particular feature is needed by a set date. After the meeting, the product owner follows up with the team and they discuss if the feature can be delivered by the date given. The team does a breakdown plus estimation and lets the product owner know that if they drop everything and work on it, it still would not be compeleted by the date but can be delivered 2 weeks later than the date. The product owner then reaches out to the requestor(s) of the feature and drills down to figure out what pieces of it are must-haves and should-haves. It turns out that the detailed breakdown revealed some assumptions by the team and not everything listed was needed. Armed with this knowledge, the product owner gets back to the team and they redo the estimation. This time keeping only the must-haves, the team feels that the must-haves can be delivered in the timeframe. The product owner then communicates to the internal customers that the feature can be completed in time with the specifics on which pieces will be delivered ( must-haves ). The team also learns that identifyng must-have items should ideally be done before estimation. Working with the customer to satisfy their needs requires a change in attitude for teams transitioning to Agile, close partnership is a good thing and clarity of what are must-haves is important. The team should always be thinking about reducing work, do just enough work to meet customer needs . Review To Do Responding to change over following a plan \u00b6 Planning is part of Agile, it is done in increments. The plan drives the team to deliver value and when the team learns of a change in requirements they can adopt the plan easily and cheaply. The ability to respond to change is the reason why Agile methodology results in higher customer satisfaction and faster time to market. Example: ACME team Re-planning : The team learned that there is a high value feature that needs to be delivered by a set date and negotiated with the customer on the must-haves. In this case, the team agrees that this is important to the customer and decides to do the planning again for the cycle. Responding to a request from the customer and replanning work will help the team to deliver value on time. This builds trust and credibility with the customer. Investing in improving the relationship/partnership with the customer requires listening to the customer and constantly thinking about what would be valuable for the customer. The team should take care and make an informed decision to change work within a cycle, this should not become the norm. Ofcourse this should be customized to the team, if a team also handles production bugs and must fix them as soon as possible then part of the cycle time can be set aside for bug fixing (if the team knows of the bugs in advance then it should be planned work). Review To Do","title":"4. Agile Values"},{"location":"manifesto/#agile-manifesto","text":"Pre-requisites: Agile Definition , Agile Principles In this section we will dive deeper into each of statement from the The Agile Manifesto . We value Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan One of the anti-patterns in Agile adoption is to focus on the left hand side of the 4 statements, which leads to imbalanced implementation and reduced benefits. The items on the right are part of Agile and must be factored in the adoption phase to realize maximum benefits. Example Scenario: Transition to Agile To understand these statements better, let\u2019s construct a hypothetical scenario : Executives at ACME Inc. have asked one of their software development teams to pilot Agile. The team currently consists of a PM, four developers, a tester and an analyst. This team is new to Agile methodology. The examples depict events in sequence and should be read in order. Note: This example is intended to show how the 4 statements in the Agile manifesto relate to an Agile team\u2019s activities. It is - not - a roadmap for Agile transition and is simplified for brevity","title":"Agile Manifesto"},{"location":"manifesto/#individuals-and-interactions-over-processes-and-tools","text":"Agile approach values individuals and implies providing the necessary support needed for the individuals to perform their best. Efficient and frequent interaction is valued. The supporting processes and tools should enhance transparency and trust. Example: ACME team Day 1 : The team meets to discuss agile transition. They agree on the following Every team member will attend Agile methodology training Any decision that impacts the team will be taken together by the team Experimentation is encouraged, take a fail-fast approach. We value individuals : Awareness of team member needs, Building trust, Creating a safe environment for learning. Next sync meeting : All team members have completed training. The team meets to discuss next steps. To be a cross functional team, the team will work together and learn from each other. The team will adopt 4 week long cycle/iteration The team will use a wall and sticky notes for tracking work The team will meet daily at a set time and talk about what they are working on and if they need help The team will pick a small project and familiar technology stack We value interactions : Frequent interaction, helping each other. We value individuals : Not overload the team at an early stage so the team has time to learn, acclimate and adapt. Start with just enough process and tools that add value. Next sync meeting : The team is cross-functional, each team member has their area of expertise and are comfortable with performing activities in other areas. The team meets to discuss next steps. The team will hold planning meeting at the start of a cycle and review meeting at the end of the cycle. The team will work together on building a backlog with just enough details for two cycles The team will estimate work items in the backlog using familiar technique We value interactions : More face-to-face communication. Introduce changes in increments rather than all at once, Just enough preparation so the team is not blocked Review To Do","title":"Individuals and interactions over processes and tools"},{"location":"manifesto/#working-software-over-comprehensive-documentation","text":"Delivering value frequently by doing just enough work and adapting to change is the Agile way. This implies doing work in increments and just enough documentation that is needed for that increment. Example ACME team Next review meeting : The team reviews completed work which at this time is the backlog. When a team has to start with building a backlog and everyone is pitching in there may not be code written in that initial cycle. This was not a coding cycle for this team. A backlog with next 2 cycles of work - is a deliverable of the iteration for this team. Some teams may start building a dev environment or procurring assets, if the agile team is doing this work then it is valid to include this in the review. Q) This seems like traditional approach where requirements document is created first, isn\u2019t it? A) Remember that the backlog is an artifact that has several levels and only the most important (highest value) requirements are broken down from the highest level to the lowest level (A unit of work that can be done in a cycle). The backlog will have just enough work items that the team can address in the next cycle or two (some teams encourage having 3 cycles worth of work items). This is different from traditional approach where all requirements need to elaborated before any work begins. Working software can be built only if the requirements are known and understood. Involving the entire team in the backlog building excercise was a great idea for this team, because the team could understand how its done and also provide feedback on what kind of details are needed at the work item level for the team to have clarity. Next planning meeting : The team selects work items for the cycle. The team members provide their inputs on how much work the team can accomplish so just enough work is added to the cycle. The work is not assigned but is chosen by the team members. After the planning meeting the team members create tasks for the work items and estimate the tasks in hours. After this the team commits to work that can be finished. At this time there are some items that get moved to the next cycle. To have predictable delivery the work must be estimated by those who will actually do it. Working software will be delivered if the team members understand exactly what is involved in delivering it and what \u201cdone\u201d means. Next review meeting : The team is able to deliver on most of the commitments but a couple of work items were not completed. There is no UI at this time and the code demo involves a quick view of the code and running unit tests. Stakeholder feedback is recorded. After the review, the PM sends out a report to executives on what was done. Working software is the true measure of progress. Reporting on commitments and accomplishments when done in an easy way (for example : a brief summay and link to tool that shows the completed items) promotes transparency and builds trust. It is also a great way to recognize the team for the work done. Whereas in traditional approach there is significant time invested in comprehensive documentation such as requirements document, this means that if there were changes then all that effort was spent needlessly. In Agile methodology the requirements are evaluated for value and the highest value items are broken down in increments, if changes to requirements that have not been broken down are required then there is zero wasted effort. In addition since the changes can be incorporated so easily the value delivered to the customer will be higher and customer satisfaction improves. Review To Do","title":"Working software over comprehensive documentation"},{"location":"manifesto/#customer-collaboration-over-contract-negotiation","text":"Customer satisfaction is the highest goal in Agile. It goes beyond contractual obligations and towards customer delight. Being customer obsessed means starting with the customer, collaborating with the customer throughout the project to understand their goals and adapt to deliver the best value. Example: ACME team Retrospective : The team has identified an improvement area. Team members realize they need to improve customer collaboration, the team is developing an internal tool and has been reaching out to the teams that will use this tool (internal customers). A team member volunteers to be the product owner and work with the other teams closely to understand their needs. The team also decides to extend invitation to key members from other teams for their planning and review meetings. Customer collaboration is possible in many ways, some teams invite external customers to their agile meetings. Other teams have a product owner who works with external customers and acts as the customer representative in the team. Next planning meeting : The meeting includes internal customers and the team shares the cycle goals with them. The team gets feedback that a particular feature is needed by a set date. After the meeting, the product owner follows up with the team and they discuss if the feature can be delivered by the date given. The team does a breakdown plus estimation and lets the product owner know that if they drop everything and work on it, it still would not be compeleted by the date but can be delivered 2 weeks later than the date. The product owner then reaches out to the requestor(s) of the feature and drills down to figure out what pieces of it are must-haves and should-haves. It turns out that the detailed breakdown revealed some assumptions by the team and not everything listed was needed. Armed with this knowledge, the product owner gets back to the team and they redo the estimation. This time keeping only the must-haves, the team feels that the must-haves can be delivered in the timeframe. The product owner then communicates to the internal customers that the feature can be completed in time with the specifics on which pieces will be delivered ( must-haves ). The team also learns that identifyng must-have items should ideally be done before estimation. Working with the customer to satisfy their needs requires a change in attitude for teams transitioning to Agile, close partnership is a good thing and clarity of what are must-haves is important. The team should always be thinking about reducing work, do just enough work to meet customer needs . Review To Do","title":"Customer collaboration over contract negotiation"},{"location":"manifesto/#responding-to-change-over-following-a-plan","text":"Planning is part of Agile, it is done in increments. The plan drives the team to deliver value and when the team learns of a change in requirements they can adopt the plan easily and cheaply. The ability to respond to change is the reason why Agile methodology results in higher customer satisfaction and faster time to market. Example: ACME team Re-planning : The team learned that there is a high value feature that needs to be delivered by a set date and negotiated with the customer on the must-haves. In this case, the team agrees that this is important to the customer and decides to do the planning again for the cycle. Responding to a request from the customer and replanning work will help the team to deliver value on time. This builds trust and credibility with the customer. Investing in improving the relationship/partnership with the customer requires listening to the customer and constantly thinking about what would be valuable for the customer. The team should take care and make an informed decision to change work within a cycle, this should not become the norm. Ofcourse this should be customized to the team, if a team also handles production bugs and must fix them as soon as possible then part of the cycle time can be set aside for bug fixing (if the team knows of the bugs in advance then it should be planned work). Review To Do","title":"Responding to change over following a plan"},{"location":"principles/","text":"Agile Principles \u00b6 Pre-requisites: Agile Definition In this section we will learn about the twelve principles behind Agile manifesto Why review principles before manifesto? Over the years I have had the opportunity to coach executives, PMs and teams. At each organization the agile transformation journey taught me a lot about what works and what doesn\u2019t work. I have learned that diving deep into the agile principles behind the manifesto before reviewing the four value statements leads to fewer mis-steps in agile practice. Agile values The Agile Manifesto has four statements that condense a lot of wisdom into few words. These statements can guide the culture change in the organization. Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan Our highest priority is to satisfy the customer through early and continuous delivery of valuable software \u00b6 Agile methodolgy recommends breaking down large requirements into thin vertical slices and get it done. By delivering early the team can get feedback from the customer and make changes to better align with the needs of the customer. Sometimes the customer has just a general idea of what they need, by having access to the product increment it helps the customer refine what their goals are or make changes if the market conditions have changed. Review To Do Welcome changing requirements, even late in development. Agile processes harness change for the customer\u2019s competitive advantage \u00b6 Agile teams take advantage of every opportunity to better align with customer needs. The incremental planning and just-in-time backlog building approach makes it easier to adapt to changing priorities. Review To Do Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale \u00b6 Delivering software frequently and early is a skill Agile teams have to build. Shorter cycle means more opportunities to deliver value and align with the customer goals. A shorter timeframe requires the team to become comfortable with breaking up work into slices that can be delivered within a cycle and have a build/release pipeline that supports faster delivery. The team should adjust the timeframe based on ability rather than because it looks better on paper. Review To Do Business people and developers must work together daily throughout the project \u00b6 For organizations tranistioning to Agile, making business people available to the team daily is very challenging. There are organizations who do this right, however may organizations ignore this and teams are left with struggling to get clarity on requirements or receiving requirements at the right time. Sometimes it is seen as a waste of resources to allocate a business person or product owner for each team. Review To Do Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done \u00b6 When you have a group of individuals that take ownership of work they do and have an Agile mindset, they will generate tremendous value. A team centric approach will keep the best team togther and provide them the support needed. I have seen organizations move individuals in/out of teams casually. Every time a high performing team is dispersed, the company loses value. In my experience, I have come across many instances of teams broken up just as they had stabilized and were working well together to deliver outstanding value. This is where the right leadership can have a big impact. Review To Do The most efficient and effective method of conveying information to and within a development team is face-to-face conversation \u00b6 When working on complex and challenging problems there is no better way to move faster than face to face communication. Email, chat, documents, wiki are slow and less effective communication channels that drag down team velocity. Review To Do Working software is the primary measure of progress \u00b6 In traditional approach the progress is measured in phases, for example: requirements phase, design phase, development phase, integration testing phase and deployment phase. The customer sees no value until all phases are complete. Agile teams deliver early and frequently. The progress is measured in terms of work that is done . The customer received working software from early in the project and in increments that add more value. Review To Do Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely \u00b6 Agile organizations value individuals and work to build a healthy work environment. There are many ways to promote sustainable development including Create a safe working environment Decision making should be done by those who have the best information Use agile metrics to learn, don\u2019t use it for performance appraisal Simplify communication paths Change hiring practices to focus on growth mindset Appropriate rest & recharge cycles Investing in tools and training Rewards & recognition Review To Do Continuous attention to technical excellence and good design enhances agility \u00b6 Most engineers i talk to agree 100% with this principle, however they also point out that they are often asked to take shortcuts and discouraged from pursuing technical excellence. Engineers want to invest time in creating a good design and doing the best possible work. From several years of talking with engineers, PMs and leadership i have come to a conclusion that \u201ctechnical excellence\u201d has different meaning for each group. Moreover the ROI calculation is done differently by each group. Review To Do Simplicity\u2013the art of maximizing the amount of work not done\u2013is essential \u00b6 This is my favorite principle. It has helped me get unstuck in many situations. Review To Do The best architectures, requirements, and designs emerge from self-organizing teams \u00b6 Self-organizing is often undervalued by teams new to Agile. This is often because self-organizing requires change in culture. A healthy working environment where people feel safe to learn from mistakes, empowers teams to take ownership and results in delivering the grestest value. Self-organizing teams choose how to best accomplish their work and take bold actions to make it happen. Review To Do At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly \u00b6 A team that does not learn & adapt is not Agile. When a team reflects regularly on how to become more effective, a world of possibilities open up. A few years ago, i was having a conversation with an executive and the topic of agile mindset came up. He wanted to know the one question to ask a team that will reveal if the team has an Agile mindset. My answer was \u201cAsk the team about tasks in the current cycle based on inspect & adapt feedback\u201d. Review To Do","title":"3. Agile Principles"},{"location":"principles/#agile-principles","text":"Pre-requisites: Agile Definition In this section we will learn about the twelve principles behind Agile manifesto Why review principles before manifesto? Over the years I have had the opportunity to coach executives, PMs and teams. At each organization the agile transformation journey taught me a lot about what works and what doesn\u2019t work. I have learned that diving deep into the agile principles behind the manifesto before reviewing the four value statements leads to fewer mis-steps in agile practice. Agile values The Agile Manifesto has four statements that condense a lot of wisdom into few words. These statements can guide the culture change in the organization. Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan","title":"Agile Principles"},{"location":"principles/#our-highest-priority-is-to-satisfy-the-customer-through-early-and-continuous-delivery-of-valuable-software","text":"Agile methodolgy recommends breaking down large requirements into thin vertical slices and get it done. By delivering early the team can get feedback from the customer and make changes to better align with the needs of the customer. Sometimes the customer has just a general idea of what they need, by having access to the product increment it helps the customer refine what their goals are or make changes if the market conditions have changed. Review To Do","title":"Our highest priority is to satisfy the customer through early and continuous delivery of valuable software"},{"location":"principles/#welcome-changing-requirements-even-late-in-development-agile-processes-harness-change-for-the-customers-competitive-advantage","text":"Agile teams take advantage of every opportunity to better align with customer needs. The incremental planning and just-in-time backlog building approach makes it easier to adapt to changing priorities. Review To Do","title":"Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage"},{"location":"principles/#deliver-working-software-frequently-from-a-couple-of-weeks-to-a-couple-of-months-with-a-preference-to-the-shorter-timescale","text":"Delivering software frequently and early is a skill Agile teams have to build. Shorter cycle means more opportunities to deliver value and align with the customer goals. A shorter timeframe requires the team to become comfortable with breaking up work into slices that can be delivered within a cycle and have a build/release pipeline that supports faster delivery. The team should adjust the timeframe based on ability rather than because it looks better on paper. Review To Do","title":"Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale"},{"location":"principles/#business-people-and-developers-must-work-together-daily-throughout-the-project","text":"For organizations tranistioning to Agile, making business people available to the team daily is very challenging. There are organizations who do this right, however may organizations ignore this and teams are left with struggling to get clarity on requirements or receiving requirements at the right time. Sometimes it is seen as a waste of resources to allocate a business person or product owner for each team. Review To Do","title":"Business people and developers must work together daily throughout the project"},{"location":"principles/#build-projects-around-motivated-individuals-give-them-the-environment-and-support-they-need-and-trust-them-to-get-the-job-done","text":"When you have a group of individuals that take ownership of work they do and have an Agile mindset, they will generate tremendous value. A team centric approach will keep the best team togther and provide them the support needed. I have seen organizations move individuals in/out of teams casually. Every time a high performing team is dispersed, the company loses value. In my experience, I have come across many instances of teams broken up just as they had stabilized and were working well together to deliver outstanding value. This is where the right leadership can have a big impact. Review To Do","title":"Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done"},{"location":"principles/#the-most-efficient-and-effective-method-of-conveying-information-to-and-within-a-development-team-is-face-to-face-conversation","text":"When working on complex and challenging problems there is no better way to move faster than face to face communication. Email, chat, documents, wiki are slow and less effective communication channels that drag down team velocity. Review To Do","title":"The most efficient and effective method of conveying information to and within a development team is face-to-face conversation"},{"location":"principles/#working-software-is-the-primary-measure-of-progress","text":"In traditional approach the progress is measured in phases, for example: requirements phase, design phase, development phase, integration testing phase and deployment phase. The customer sees no value until all phases are complete. Agile teams deliver early and frequently. The progress is measured in terms of work that is done . The customer received working software from early in the project and in increments that add more value. Review To Do","title":"Working software is the primary measure of progress"},{"location":"principles/#agile-processes-promote-sustainable-development-the-sponsors-developers-and-users-should-be-able-to-maintain-a-constant-pace-indefinitely","text":"Agile organizations value individuals and work to build a healthy work environment. There are many ways to promote sustainable development including Create a safe working environment Decision making should be done by those who have the best information Use agile metrics to learn, don\u2019t use it for performance appraisal Simplify communication paths Change hiring practices to focus on growth mindset Appropriate rest & recharge cycles Investing in tools and training Rewards & recognition Review To Do","title":"Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely"},{"location":"principles/#continuous-attention-to-technical-excellence-and-good-design-enhances-agility","text":"Most engineers i talk to agree 100% with this principle, however they also point out that they are often asked to take shortcuts and discouraged from pursuing technical excellence. Engineers want to invest time in creating a good design and doing the best possible work. From several years of talking with engineers, PMs and leadership i have come to a conclusion that \u201ctechnical excellence\u201d has different meaning for each group. Moreover the ROI calculation is done differently by each group. Review To Do","title":"Continuous attention to technical excellence and good design enhances agility"},{"location":"principles/#simplicity-the-art-of-maximizing-the-amount-of-work-not-done-is-essential","text":"This is my favorite principle. It has helped me get unstuck in many situations. Review To Do","title":"Simplicity--the art of maximizing the amount of work not done--is essential"},{"location":"principles/#the-best-architectures-requirements-and-designs-emerge-from-self-organizing-teams","text":"Self-organizing is often undervalued by teams new to Agile. This is often because self-organizing requires change in culture. A healthy working environment where people feel safe to learn from mistakes, empowers teams to take ownership and results in delivering the grestest value. Self-organizing teams choose how to best accomplish their work and take bold actions to make it happen. Review To Do","title":"The best architectures, requirements, and designs emerge from self-organizing teams"},{"location":"principles/#at-regular-intervals-the-team-reflects-on-how-to-become-more-effective-then-tunes-and-adjusts-its-behavior-accordingly","text":"A team that does not learn & adapt is not Agile. When a team reflects regularly on how to become more effective, a world of possibilities open up. A few years ago, i was having a conversation with an executive and the topic of agile mindset came up. He wanted to know the one question to ask a team that will reveal if the team has an Agile mindset. My answer was \u201cAsk the team about tasks in the current cycle based on inspect & adapt feedback\u201d. Review To Do","title":"At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly"},{"location":"adopt/","text":"Agile Adoption: Start with why \u00b6 This might seem obvious but in my experience some organizations/teams fail to define SMART goals for agile adoption because they have not had serious conversations on why agile adoption makes sense for the team/org. IMPORTANT Answering why will highlight the key realizable benefits and more importantly the benefits that will be out of reach. Yes, you read it correctly: Out of all the benefits of agile there may be some ( or many) that are unrealizable depending on the reason(s) for agile adoption. Here are a few \u201cfictional\u201d examples that setup the agile transition team for failure Reason for agile adoption What it probably means The top companies use agile methodology We want to be like the cool kids We need to be seen as \u201cagile\u201d to recruit top talent Let\u2019s put lipstick on a pig and hope no one notices It was a directive from leadership Let\u2019s just do enough to look good on paper Hopefully these are not actual reasons you hear. Drop me an email if you come across similar reasons If you are reading this to know what the benefits of agil are and how to evaluate suitability, we will cover that soon. However if you would rather learn about it now then head over to Benefits page and then the Evaluation page. Tip The rest of this section assumes that your project has been found to be suitable for agile methodology. Ok, so if the reason(s) for agile adoption determine the outcome, what are some examples of \u201cgood\u201d reasons for agile adoption. We are getting to that but first let\u2019s discuss commitment needed for favorable outcome. Depending on the size of the organization/ number of teams, mindset and desired competency levels , agile adoption timeframe could be between 6 months to 2+ years cost could run from a few thousand to 100s of thousands. Size : This one is easy, timeand cost will be direcly proportional to number of teams/stakeholders involved in agile transformation. Mindset : This is THE most important factor in getting highest value from agile adoption. A fixe mindset will almost guarantee failure. Growth mindset is essential for all competency levels. It is not possible to talk about mindset in a sinlge paragraph, a detailed discussion is available at Agile mindset . Competency Levels : this is sometimes referred to as agile maturity. I prefer the term competency because it is something that can be planned for and achieved with the appropriate level of commitment. I have developed a Competency model with four bands, the highest band offers the greatest benefits. Value to the organization/team, of tranistioning to agile, is dependent on many factors. For now let\u2019s be aware of the \u201cvalue range\u201d. Value ranges from 1x to 10x What do you mean the lower end starts at 1x, same as traditional? Yes, when agile adoption is for the wrong reasons and there is lack of commitment then there maybe no value gained.The power of agile methodology is unleashed when there is strong commitment and participants have a growth mindset. Most teams adopting agile will fall somewhere in between 1x and 10x. Commitment Organizations and teams will get exactly the outcome commensurate with the commitment made to agile transformation. Story: Kanban at Scale \u2013 A Siemens Success Story If you are still reading this then congratulations , you have an open mind and will probably get a lot of value from this book. Let\u2019s get back to discussing \u201cgood\u201d reasons for agile adoption. These reasons lead to the best outcome by driving the right behaviors in the teams/stakeholders. Here are a few examples Reason for agile adoption What it probably means Improve customer satisfaction Ability to handle changing requirements at any stage in the project Deliver frequently Reduce tiem to market by incrementally delivering working software","title":"Agile Adoption: Start with why"},{"location":"adopt/#agile-adoption-start-with-why","text":"This might seem obvious but in my experience some organizations/teams fail to define SMART goals for agile adoption because they have not had serious conversations on why agile adoption makes sense for the team/org. IMPORTANT Answering why will highlight the key realizable benefits and more importantly the benefits that will be out of reach. Yes, you read it correctly: Out of all the benefits of agile there may be some ( or many) that are unrealizable depending on the reason(s) for agile adoption. Here are a few \u201cfictional\u201d examples that setup the agile transition team for failure Reason for agile adoption What it probably means The top companies use agile methodology We want to be like the cool kids We need to be seen as \u201cagile\u201d to recruit top talent Let\u2019s put lipstick on a pig and hope no one notices It was a directive from leadership Let\u2019s just do enough to look good on paper Hopefully these are not actual reasons you hear. Drop me an email if you come across similar reasons If you are reading this to know what the benefits of agil are and how to evaluate suitability, we will cover that soon. However if you would rather learn about it now then head over to Benefits page and then the Evaluation page. Tip The rest of this section assumes that your project has been found to be suitable for agile methodology. Ok, so if the reason(s) for agile adoption determine the outcome, what are some examples of \u201cgood\u201d reasons for agile adoption. We are getting to that but first let\u2019s discuss commitment needed for favorable outcome. Depending on the size of the organization/ number of teams, mindset and desired competency levels , agile adoption timeframe could be between 6 months to 2+ years cost could run from a few thousand to 100s of thousands. Size : This one is easy, timeand cost will be direcly proportional to number of teams/stakeholders involved in agile transformation. Mindset : This is THE most important factor in getting highest value from agile adoption. A fixe mindset will almost guarantee failure. Growth mindset is essential for all competency levels. It is not possible to talk about mindset in a sinlge paragraph, a detailed discussion is available at Agile mindset . Competency Levels : this is sometimes referred to as agile maturity. I prefer the term competency because it is something that can be planned for and achieved with the appropriate level of commitment. I have developed a Competency model with four bands, the highest band offers the greatest benefits. Value to the organization/team, of tranistioning to agile, is dependent on many factors. For now let\u2019s be aware of the \u201cvalue range\u201d. Value ranges from 1x to 10x What do you mean the lower end starts at 1x, same as traditional? Yes, when agile adoption is for the wrong reasons and there is lack of commitment then there maybe no value gained.The power of agile methodology is unleashed when there is strong commitment and participants have a growth mindset. Most teams adopting agile will fall somewhere in between 1x and 10x. Commitment Organizations and teams will get exactly the outcome commensurate with the commitment made to agile transformation. Story: Kanban at Scale \u2013 A Siemens Success Story If you are still reading this then congratulations , you have an open mind and will probably get a lot of value from this book. Let\u2019s get back to discussing \u201cgood\u201d reasons for agile adoption. These reasons lead to the best outcome by driving the right behaviors in the teams/stakeholders. Here are a few examples Reason for agile adoption What it probably means Improve customer satisfaction Ability to handle changing requirements at any stage in the project Deliver frequently Reduce tiem to market by incrementally delivering working software","title":"Agile Adoption: Start with why"},{"location":"adopt/backlog/","text":"Agile adoption pre-requisite backlog \u00b6 Purpose: These are the pre-requisite work items to be completed before starting agile adoption/transformation 1. Clearly define goals for agile adoption/transformation \u00b6 1.1. Setup agile transformation team \u00b6 1.2. Collect inputs from stakeholders \u00b6 1.3. Articulate the benefits expected \u00b6 1.4. Evaluate the commitment level \u00b6 1.5. Set SMART goals \u00b6 2. Secure Commitment \u00b6 2.1. People: Who will participate \u00b6 2.2. Time: Allocate dedicated time for participation \u00b6 2.3. Cost: Secure funding for training, tools, supplies, equipment etc., \u00b6 3. Build high level agile adoption backlog \u00b6 3.1. Define backlog items based on goals \u00b6 3.2. Determine business value \u00b6 3.3. Elaborate backlog items so there is enough work for two iterations \u00b6 3.4. Groom the backlog and mark Minimal Viable Product (MVP) items \u00b6 3.5. Estimate the effort for MVP items and determine value \u00b6 3.6. Prioritize the backlog \u00b6","title":"Agile adoption pre-requisite backlog"},{"location":"adopt/backlog/#agile-adoption-pre-requisite-backlog","text":"Purpose: These are the pre-requisite work items to be completed before starting agile adoption/transformation","title":"Agile adoption pre-requisite backlog"},{"location":"adopt/backlog/#1-clearly-define-goals-for-agile-adoptiontransformation","text":"","title":"1. Clearly define goals for agile adoption/transformation"},{"location":"adopt/backlog/#11-setup-agile-transformation-team","text":"","title":"1.1. Setup agile transformation team"},{"location":"adopt/backlog/#12-collect-inputs-from-stakeholders","text":"","title":"1.2. Collect inputs from stakeholders"},{"location":"adopt/backlog/#13-articulate-the-benefits-expected","text":"","title":"1.3. Articulate the benefits expected"},{"location":"adopt/backlog/#14-evaluate-the-commitment-level","text":"","title":"1.4. Evaluate the commitment level"},{"location":"adopt/backlog/#15-set-smart-goals","text":"","title":"1.5. Set SMART goals"},{"location":"adopt/backlog/#2-secure-commitment","text":"","title":"2. Secure Commitment"},{"location":"adopt/backlog/#21-people-who-will-participate","text":"","title":"2.1. People: Who will participate"},{"location":"adopt/backlog/#22-time-allocate-dedicated-time-for-participation","text":"","title":"2.2. Time: Allocate dedicated time for participation"},{"location":"adopt/backlog/#23-cost-secure-funding-for-training-tools-supplies-equipment-etc","text":"","title":"2.3. Cost: Secure funding for training, tools, supplies, equipment etc.,"},{"location":"adopt/backlog/#3-build-high-level-agile-adoption-backlog","text":"","title":"3. Build high level agile adoption backlog"},{"location":"adopt/backlog/#31-define-backlog-items-based-on-goals","text":"","title":"3.1. Define backlog items based on goals"},{"location":"adopt/backlog/#32-determine-business-value","text":"","title":"3.2. Determine business value"},{"location":"adopt/backlog/#33-elaborate-backlog-items-so-there-is-enough-work-for-two-iterations","text":"","title":"3.3. Elaborate backlog items so there is enough work for two iterations"},{"location":"adopt/backlog/#34-groom-the-backlog-and-mark-minimal-viable-product-mvp-items","text":"","title":"3.4. Groom the backlog and mark Minimal Viable Product (MVP) items"},{"location":"adopt/backlog/#35-estimate-the-effort-for-mvp-items-and-determine-value","text":"","title":"3.5. Estimate the effort for MVP items and determine value"},{"location":"adopt/backlog/#36-prioritize-the-backlog","text":"","title":"3.6. Prioritize the backlog"},{"location":"adopt/benefits/","text":"Benefits \u00b6 There are a lot of resources available online as well as books which list the benefits of agile methodology. For your convenience i have listed the major benefits below and added links below to online sources where you can find out more. in addition, at teh bottom of the page you will find the disadvantages of agile methodology ( Hint: It has to do with using agile methodology in projects where it is not suitable, lack of understanding of agile concepts, lack of commitment or ineffective rollout ) Higher customer satisfaction Faster time to market Deliver value from the beginning of the project and incrementally deliver value throughout High visibility into the project throughout Reduced Risk Higher efficiency in getting work done Higher quality as testing is done throughtout Higher team morale Increased team collaboration and ownership Relevant metrics Continous improvement sustainable development pace","title":"Benefits"},{"location":"adopt/benefits/#benefits","text":"There are a lot of resources available online as well as books which list the benefits of agile methodology. For your convenience i have listed the major benefits below and added links below to online sources where you can find out more. in addition, at teh bottom of the page you will find the disadvantages of agile methodology ( Hint: It has to do with using agile methodology in projects where it is not suitable, lack of understanding of agile concepts, lack of commitment or ineffective rollout ) Higher customer satisfaction Faster time to market Deliver value from the beginning of the project and incrementally deliver value throughout High visibility into the project throughout Reduced Risk Higher efficiency in getting work done Higher quality as testing is done throughtout Higher team morale Increased team collaboration and ownership Relevant metrics Continous improvement sustainable development pace","title":"Benefits"},{"location":"adopt/checklist/","text":"Checklists \u00b6","title":"Checklists"},{"location":"adopt/checklist/#checklists","text":"","title":"Checklists"},{"location":"adopt/evaluation/","text":"Determine suitability of agile methodology for your project \u00b6","title":"Determine suitability of agile methodology for your project"},{"location":"adopt/evaluation/#determine-suitability-of-agile-methodology-for-your-project","text":"","title":"Determine suitability of agile methodology for your project"},{"location":"adopt/example_bad/","text":"Example of a bad start to agile adoption \u00b6","title":"Example of a bad start to agile adoption"},{"location":"adopt/example_bad/#example-of-a-bad-start-to-agile-adoption","text":"","title":"Example of a bad start to agile adoption"},{"location":"adopt/mindset/","text":"Agile mindset \u00b6","title":"Agile mindset"},{"location":"adopt/mindset/#agile-mindset","text":"","title":"Agile mindset"},{"location":"competency/","text":"Agile competency bands \u00b6 Agile competency bands are loosely based on a japanese martial art concept: shu, ha, ri 1 Expert Mastery of agile concepts. Ability to apply out-of-the-box thinking while remaining true to Agile values. Advanced Excellent grasp of concepts. Able to deliver value at sustainable development pace. Basic Have broad knowlegde of agile principles and how to apply them. Needs some guidance. Aware Understand basic concepts. Low experience. Needs a lot of guidance to be effective. Learn more about Shu Ha Ri \u21a9","title":"Agile competency bands"},{"location":"competency/#agile-competency-bands","text":"Agile competency bands are loosely based on a japanese martial art concept: shu, ha, ri 1 Expert Mastery of agile concepts. Ability to apply out-of-the-box thinking while remaining true to Agile values. Advanced Excellent grasp of concepts. Able to deliver value at sustainable development pace. Basic Have broad knowlegde of agile principles and how to apply them. Needs some guidance. Aware Understand basic concepts. Low experience. Needs a lot of guidance to be effective. Learn more about Shu Ha Ri \u21a9","title":"Agile competency bands"}]}